def solution(answers):
    # 수포자 1, 2, 3의 패턴을 리스트로 정의
    pattern_1 = [1, 2, 3, 4, 5]
    pattern_2 = [2, 1, 2, 3, 2, 4, 2, 5]
    pattern_3 = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5]
    
    # 각 수포자의 정답 맞힌 개수를 저장할 변수 초기화
    scores = [0, 0, 0]
    
    # 정답 배열을 순회하면서 각 수포자의 답과 비교하여 정답 맞힌 개수를 계산
    for i in range(len(answers)):
        if answers[i] == pattern_1[i % len(pattern_1)]:
            scores[0] += 1
        if answers[i] == pattern_2[i % len(pattern_2)]:
            scores[1] += 1
        if answers[i] == pattern_3[i % len(pattern_3)]:
            scores[2] += 1
    
    # 가장 많은 문제를 맞힌 점수를 구함
    max_score = max(scores)
    
    # 가장 많은 문제를 맞힌 수포자를 찾아서 리스트에 저장
    result = []
    for i in range(3):
        if scores[i] == max_score:
            result.append(i + 1)  # 수포자 번호는 1부터 시작하므로 1을 더해줌
    
    return result

# 테스트 예제
print(solution([1, 2, 3, 4, 5]))  # [1]
print(solution([1, 3, 2, 4, 2]))  # [1, 2, 3]
